version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: numa-ochi-postgres
    environment:
      POSTGRES_DB: numa_ochi
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d numa_ochi"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: numa-ochi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: numa-ochi-meilisearch
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: aSuperSecretMasterKey
    volumes:
      - meili_data:/meili_data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7700/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Give Meilisearch a bit more time to initialize

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: numa-ochi-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/numa_ochi
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      MEILISEARCH_HOST: http://meilisearch:7700
      MEILISEARCH_API_KEY: aSuperSecretMasterKey
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/build # Exclude build directory from host mount to prevent conflicts

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: numa-ochi-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8080 # For local browser access
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules # Exclude node_modules from host mount

volumes:
  postgres_data:
  redis_data:
  meili_data:
